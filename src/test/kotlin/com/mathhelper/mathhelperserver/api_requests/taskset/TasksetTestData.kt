package com.mathhelper.mathhelperserver.api_requests.taskset

class TasksetTestData {
    companion object {
        val createTasksetWithTaskReqBody = """
            {
                "namespaceCode": "test_namespace_code",
                "code": "demo_demo",
                "nameEn": "demo_demo",
                "nameRu": "демо_демо",
                "tasks": [
                    {
                        "nameEn": "demo_demo",
                        "nameRu": "демо_демо",
                        "goalType": "CUSTOM",
                        "goalPattern": "",
                        "namespaceCode": "test_namespace_code",
                        "code": "demo__demo__demo",
                        "subjectType": "",
                        "goalNumberProperty": 0,
                        "rulePacks": [],
                        "stepsNumber": 0,
                        "time": 0,
                        "difficulty": 0,
                        "solution": null,
                        "countOfAutoGeneratedTasks": 0,
                        "otherGoalData": null,
                        "otherCheckSolutionData": null,
                        "otherAwardData": null,
                        "otherAutogenerationData": null,
                        "otherData": null,
                        "originalExpressionTex": "tg\\left(x\\right)+1+1",
                        "originalExpressionPlainText": "tg(x)+1+1",
                        "originalExpressionStructureString": "(+(tg(x);1;1))",
                        "goalExpressionTex": "\\frac{\\sin\\left(x\\right)}{\\cos\\left(x\\right)}+2",
                        "goalExpressionPlainText": "sin(x)/cos(x)+2",
                        "goalExpressionStructureString": "(+(/(sin(x);cos(x));2))"
                    }
                ]
            } 
        """.trimIndent()

        val createDifferentTasksetWithTaskReqBody = """
            {
                "namespaceCode": "test_namespace_code",
                "code": "different_taskset",
                "nameEn": "different_taskset",
                "nameRu": "другой набор задач",
                "tasks": [
                    {
                        "nameEn": "different_task",
                        "nameRu": "другая задача",
                        "goalType": "CUSTOM",
                        "goalPattern": "",
                        "namespaceCode": "test_namespace_code",
                        "code": "different_task__task",
                        "subjectType": "",
                        "goalNumberProperty": 0,
                        "rulePacks": [],
                        "stepsNumber": 0,
                        "time": 0,
                        "difficulty": 0,
                        "solution": null,
                        "countOfAutoGeneratedTasks": 0,
                        "otherGoalData": null,
                        "otherCheckSolutionData": null,
                        "otherAwardData": null,
                        "otherAutogenerationData": null,
                        "otherData": null,
                        "originalExpressionTex": "tg\\left(x\\right)+1+1",
                        "originalExpressionPlainText": "tg(x)+1+1",
                        "originalExpressionStructureString": "(+(tg(x);1;1))",
                        "goalExpressionTex": "\\frac{\\sin\\left(x\\right)}{\\cos\\left(x\\right)}+2",
                        "goalExpressionPlainText": "sin(x)/cos(x)+2",
                        "goalExpressionStructureString": "(+(/(sin(x);cos(x));2))"
                    }
                ]
            } 
        """.trimIndent()

        val editTasksetWithTaskReqBody = """
            {
                "namespaceCode": "test_namespace_code",
                "code": "demo_demo",
                "nameEn": "demo_demo2",
                "nameRu": "демо_демо2",
                "tasks": [
                    {
                        "nameEn": "demo_demo",
                        "nameRu": "демо_демо",
                        "goalType": "CUSTOM",
                        "goalPattern": "",
                        "namespaceCode": "test_namespace_code",
                        "code": "demo__demo__demo",
                        "subjectType": "",
                        "goalNumberProperty": 0,
                        "rulePacks": [],
                        "stepsNumber": 10,
                        "time": 0,
                        "difficulty": 0,
                        "solution": null,
                        "countOfAutoGeneratedTasks": 0,                       
                        "otherGoalData": null,
                        "otherCheckSolutionData": null,
                        "otherAwardData": null,
                        "otherAutogenerationData": null,
                        "originalExpressionTex": "tg\\left(x\\right)+1+1",
                        "originalExpressionPlainText": "tg(x)+1+1",
                        "originalExpressionStructureString": "(+(tg(x);1;1))",
                        "goalExpressionTex": "\\frac{\\sin\\left(x\\right)}{\\cos\\left(x\\right)}+2",
                        "goalExpressionPlainText": "sin(x)/cos(x)+2",
                        "goalExpressionStructureString": "(+(/(sin(x);cos(x));2))"
                    }
                ]
            }
        """.trimIndent()
    }
}